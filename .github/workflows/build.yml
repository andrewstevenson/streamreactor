name: CI

on:
  pull_request:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    outputs:
      modules:
        description: "Stream reactor collection of modules"
        value: ${{ jobs.initiate.outputs.matrix }}

jobs:
  initiate:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.read-mods.outputs.matrix }}
      it_matrix: ${{ steps.read-mods.outputs.it-matrix }}
      fun_matrix: ${{ steps.read-mods.outputs.fun-matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Generate modules lists
        run: sbt generateModulesList generateItModulesList generateFunModulesList
        env:
          JVM_OPTS: -Xmx3200m

      - name: Read modules lists
        id: read-mods
        run: |
          echo "::set-output name=matrix::$(cat ./target/scala-2.13/resource_managed/main/modules.txt)"
          echo "::set-output name=it-matrix::$(cat ./target/scala-2.13/resource_managed/main/it-modules.txt)"
          echo "::set-output name=fun-matrix::$(cat ./target/scala-2.13/resource_managed/main/fun-modules.txt)"
      - name: Cleanup before cache
        shell: bash
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                              -name "*.lock"               -delete || true

  scalafmt:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Check the project
        run: sbt scalafmtCheck
        env:
          JVM_OPTS: -Xmx3200m
      - name: Check the sbt files
        run: sbt scalafmtSbtCheck
        env:
          JVM_OPTS: -Xmx3200m

  test:
    needs: initiate
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Run tests
        run: sbt "project ${{ matrix.module }}" test
        env:
          JVM_OPTS: -Xmx3200m
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/target/**/test-reports/*.xml"
          check_name: ${{ matrix.module }}-test-results
          comment_mode: off

  integration-test:
    needs: initiate
    timeout-minutes: 30
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.it_matrix)}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Run tests
        run: sbt "project ${{ matrix.module }}" it:test
        env:
          JVM_OPTS: -Xmx3200m
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/target/**/it-reports/*.xml"
          check_name: ${{ matrix.module }}-it-results
          comment_mode: off

  build-and-cache-assembly:
    needs:
      - initiate
      - scalafmt
      - test
    #  - integration-test
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}

      - name: Cache assembly
        uses: actions/cache@v3
        with:
          path: |
            ~/**/target/**/libs/*.jar
          key: ${{ runner.os }}-assembly-${{ matrix.module }}-${{ github.run_id }}

      - name: Get version
        id: version
        shell: bash
        run: |
          if [ "${{ inputs.version }}" != "" ]; then
            echo "::set-output name=version::${{ inputs.version }}"
          else
             echo "::set-output name=version::$(git describe --tags --always)"
          fi

      - name: Build assembly
        env:
          JVM_OPTS: -Xmx3200m
          VERSION: ${{ steps.version.outputs.version }}
        run: sbt "project ${{ matrix.module }};set assembly / test := {}" assembly

  functional-test:
    needs:
      - initiate
      - build-and-cache-assembly
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.fun_matrix)}}
        connectImageVersion: [7.3.1, 6.2.2]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Cache assembly
        uses: actions/cache@v3
        with:
          path: |
            ~/**/target/**/libs/*.jar
          key: ${{ runner.os }}-assembly-${{ matrix.module }}-${{ github.run_id }}
      - name: Run tests
        run: sbt "project ${{ matrix.module }}" fun:test
        env:
          JVM_OPTS: -Xmx3200m
          CONNECT_IMAGE_VERSION: ${{matrix.connectImageVersion}}
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/target/**/test-reports/*.xml"
          check_name: ${{ matrix.module }}-${{ matrix.connectImageVersion }}-fun-results
          comment_mode: off

  upload-assembly:
    needs:
      - initiate
      - build-and-cache-assembly
      - functional-test
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.matrix)}}
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Cache assembly
        uses: actions/cache@v3
        with:
          path: |
            ~/**/target/**/libs/*.jar
          key: ${{ runner.os }}-assembly-${{ matrix.module }}-${{ github.run_id }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: assembly-${{ matrix.module }}-${{ github.run_id }}
          path: ~/**/target/**/libs/*.jar
