
name: CI

on: [pull_request]
jobs:
  initiate:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.read-mods.outputs.matrix }}
      it_matrix: ${{ steps.read-mods.outputs.it-matrix }}
      fun_matrix: ${{ steps.read-mods.outputs.fun-matrix }}
    steps:
      - uses: actions/checkout@master
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Generate modules lists
        run: sbt generateModulesList generateItModulesList generateFunModulesList
        env:
          JVM_OPTS: -Xmx3200m
      - name: Read modules lists
        id: read-mods
        run: |
          echo "::set-output name=matrix::$(cat ./target/scala-2.13/resource_managed/main/modules.txt)"
          echo "::set-output name=it-matrix::$(cat ./target/scala-2.13/resource_managed/main/it-modules.txt)"
          echo "::set-output name=fun-matrix::$(cat ./target/scala-2.13/resource_managed/main/fun-modules.txt)"
      - name: Cleanup before cache
        shell: bash
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                              -name "*.lock"               -delete || true

  test:
    needs: initiate
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.matrix)}}
    steps:
      - uses: actions/checkout@master
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Run tests
        run: sbt "project ${{ matrix.module }}" test
        env:
          JVM_OPTS: -Xmx3200m
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/target/**/test-reports/*.xml"
          check_name: ${{ matrix.module }}-test-results
          comment_mode: off

  integration-test:
    needs: initiate
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.it_matrix)}}
    steps:
      - uses: actions/checkout@master
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Run tests
        run: sbt "project ${{ matrix.module }}" it:test
        env:
          JVM_OPTS: -Xmx3200m
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/target/**/it-reports/*.xml"
          check_name: ${{ matrix.module }}-it-results
          comment_mode: off

  build-and-cache-assembly:
    needs:
      - initiate
      - test
      - integration-test
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.matrix)}}
    steps:
      - uses: actions/checkout@master
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Cache assembly
        uses: actions/cache@v3
        with:
          path: |
            ~/**/target/**/libs/*.jar
          key: ${{ runner.os }}-assembly-${{ matrix.module }}-${{ github.run_id }}
      - name: Build assembly
        run: sbt "project ${{ matrix.module }};set assembly / test := {}" assembly
        env:
          JVM_OPTS: -Xmx3200m

  functional-test:
    needs:
      - initiate
      - build-and-cache-assembly
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.fun_matrix)}}
    steps:
      - uses: actions/checkout@master
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Cache assembly
        uses: actions/cache@v3
        with:
          path: |
            ~/**/target/**/libs/*.jar
          key: ${{ runner.os }}-assembly-${{ matrix.module }}-${{ github.run_id }}
      - name: Run tests
        run: sbt "project ${{ matrix.module }}" fun:test
        env:
          JVM_OPTS: -Xmx3200m
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/target/**/test-reports/*.xml"
          check_name: ${{ matrix.module }}-fun-results
          comment_mode: off

  upload-assembly:
    needs:
      - initiate
      - functional-test
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJSON(needs.initiate.outputs.matrix)}}
    steps:
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/**') }}
      - name: Cache assembly
        uses: actions/cache@v3
        with:
          path: |
            ~/**/target/**/libs/*.jar
          key: ${{ runner.os }}-assembly-${{ matrix.module }}-${{ github.run_id }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: assembly-${{ matrix.module }}-${{ github.run_id }}
          path: ~/**/target/**/libs/*.jar
